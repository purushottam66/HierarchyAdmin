<link rel="stylesheet" href="https://cdn.datatables.net/2.1.6/css/dataTables.dataTables.css" class="rel">
<link rel="stylesheet" href="https://cdn.datatables.net/buttons/3.1.2/css/buttons.dataTables.css" class="rel">


<style>
    /* .delete-btn a {
        height: 30px !important;
    }

    .d-flex a {
        height: 30px !important;
    } */




    table th,
    table td {
        padding: 80px;
        /* You can reduce padding as well */
        line-height: 1.2;
        /* Adjust the line-height to make it more compact */
        vertical-align: middle;
        /* Aligns the text in the middle vertically */
    }

    table th {
        text-align: left;
        /* Ensures the header text is aligned to the left */
    }


    tr td {
        font-size: 12px;
        line-height: 10px !important;
    }

    .setfont {
        font-size: 8px;
        padding: 0px 16px;
    }


    #loader {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 9999;
        text-align: center;
    }

    .spinner {
        border: 8px solid #932d86;
        border-left: 8px solid #3498db;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    /* Add custom styles if needed */
    .dataTables_wrapper .top {
        text-align: right;
        /* Align buttons to the right */
    }

    /* Ensure length menu is visible */
    .dataTables_length {
        display: block;
    }

    .dt-paging {
        float: right;
    }

    /* .dt-search {
    display: block !important;

} */

    .dt-buttons {
        float: right;
    }

    .dt-length label {
        display: none;
    }



    tr td {
        text-align: center !important;
    }
</style>


<style>
    /* .mgscd-menu .main-content .container-fluid {
        width: 1275px;
        max-width: 1375px;
    } */

    .table-responsive {
        width: 100%;

        /* Use max-width instead of width */
        overflow-x: auto;
        /* Allow horizontal scrolling */
        border: 1px solid #ddd;
        /* Optional: Add a border for better visibility */
        border-radius: 5px;
        /* Optional: Add rounded corners */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        /* Optional: Add a subtle shadow */
    }

    /* Optional: Style for the table inside the responsive container */
    .table-responsive table {
        width: 100%;
        border-collapse: collapse;
        /* Remove space between table cells */
    }

    .table-responsive th,
    .table-responsive td {
        padding: 12px;
        /* Add padding for better spacing */
        text-align: left;
        /* Align text to the left */
    }

    .table-responsive th {
        background-color: #f2f2f2;
        /* Optional: Add a background color for header */
    }



    th,
    td {
        padding: 8px;
        text-align: center;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

    }
</style>

<!-- Loader HTML -->
<div id="loader" style="display: none;">
    <div class="spinner"></div>
</div>


<div class="app-main">
    <header class="main-heading shadow-2dp">
        <div class="dashhead bg-white">
            <div class="dashhead-titles">
                <h3 class="dashhead-title">HierarchyData</h3>
            </div>
            <div class="dashhead-toolbar">
                <div class="dashhead-toolbar-item"><a href="index">Hierarchy</a> / HierarchyData
                </div>
            </div>
        </div>
    </header>
    <div class="main-content bg-clouds">
        <div class="container-fluid p-t-15">
            <div class="row">
                <div class="col-md-12">
                    <div class="box shadow-2dp b-r-2">

                        <div class="box-body">



                            <?php if ($this->session->flashdata('message')): ?>
                                <div class="alert alert-info">
                                    <?php echo $this->session->flashdata('message'); ?>
                                </div>
                            <?php endif; ?>


                            <?php if ($this->session->flashdata('success')): ?>
                                <div class="alert alert-success">
                                    <?php echo $this->session->flashdata('success'); ?>
                                </div>
                            <?php endif; ?>
                            <?php if ($this->session->flashdata('error')): ?>
                                <div class="alert alert-danger">
                                    <?php echo $this->session->flashdata('error'); ?>
                                </div>
                            <?php endif; ?>

                            <form action="" method="post">
                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="form-group p-b-10">
                                            <label  for="sales-code-filter">Sales Code:</label>
                                            <select class="selectpicker form-control" data-actions-box="true" multiple
                                                aria-label="Default select example" title="Please Select" data-size="5"
                                                data-live-search="true" multiple data-selected-text-format="count"
                                                data-count-selected-text=" ({0} items selected)" id="Sales_Code"
                                                name="Sales_Code" aria-label="Select Sales Code">


                                            </select>
                                        </div>
                                    </div>


                                    <div class="col-md-4">
                                        <div class="form-group p-b-10">
                                            <label  for="distribution-channel-filter">Distribution
                                                Channel Code:</label>
                                            <select class="selectpicker form-control" data-actions-box="true" multiple
                                                aria-label="Default select example" title="Please Select" data-size="5"
                                                data-live-search="true" multiple data-selected-text-format="count"
                                                data-count-selected-text=" ({0} items selected)"
                                                id="Distribution_Channel_Code" name="Distribution_Channel_Code"
                                                aria-label="Select Distribution Channel Code">


                                            </select>
                                        </div>
                                    </div>


                                    <div class="col-md-4">
                                        <div class="form-group p-b-10">
                                            <label  for="division-code-filter">Division Code:</label>
                                            <select class="selectpicker form-control" data-actions-box="true" multiple
                                                aria-label="Default select example" title="Please Select" data-size="5"
                                                data-live-search="true" multiple data-selected-text-format="count"
                                                data-count-selected-text=" ({0} items selected)" id="Division_Code"
                                                name="Division_Code" aria-label="Select Division Code">


                                            </select>
                                        </div>
                                    </div>


                                    <div class="col-md-4">
                                        <div class="form-group p-b-10">
                                            <label  for="customer-type-code-filter">Customer Type
                                                Code:</label>
                                            <select class="selectpicker form-control" data-actions-box="true" multiple
                                                aria-label="Default select example" title="Please Select" data-size="5"
                                                data-live-search="true" multiple data-selected-text-format="count"
                                                data-count-selected-text=" ({0} items selected)" id="Customer_Type_Code"
                                                name="Customer_Type_Code" aria-label="Select Customer Type Code">


                                            </select>
                                        </div>
                                    </div>


                                    <div class="col-md-4">
                                        <div class="form-group p-b-10">
                                            <label  for="customer-group-code-filter">Customer Group
                                                Code:</label>
                                            <select class="selectpicker form-control" data-actions-box="true" multiple
                                                aria-label="Default select example" title="Please Select" data-size="5"
                                                data-live-search="true" multiple data-selected-text-format="count"
                                                data-count-selected-text=" ({0} items selected)"
                                                id="Customer_Group_Code" name="Customer_Group_Code"
                                                aria-label="Select Customer Group Code">
                                            </select>
                                        </div>
                                    </div>


                                    <div class="col-md-4">
                                        <div class="form-group p-b-10">
                                            <label  for="population-strata-filter">Select Pop
                                                Strata:</label>
                                            <select class="selectpicker form-control" data-actions-box="true" multiple
                                                aria-label="Default select example" title="Please Select" data-size="5"
                                                data-live-search="true" multiple data-selected-text-format="count"
                                                data-count-selected-text=" ({0} items selected)"
                                                id="Population_Strata_2" name="Population_Strata_2"
                                                aria-label="Select Population Strata">


                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </form>









                            <div class="table-responsive">
                                <table id="exampley" class="display nowrap table table-bordered table-hover text-center"
                                    style="width:100%">
                                    <thead>
                                        <tr>
                                            <th></th>


                                            <th class="text-center ">Level 1 Name</th>

                                            <th class="text-center ">Level 1 designation name</th>

                                            <th class="text-center ">Level 2 Name</th>

                                            <th class="text-center ">Level 2 designation name</th>

                                            <th class="text-center ">Level 3 Name</th>

                                            <th class="text-center ">Level 3 designation name</th>

                                            <th class="text-center ">Level 4 Name</th>

                                            <th class="text-center ">Level 4 designation name</th>

                                            <th class="text-center ">Level 5 Name</th>

                                            <th class="text-center ">Level 5 designation name</th>

                                            <th class="text-center ">Level 6 Name</th>

                                            <th class="text-center ">Level 6 designation name</th>

                                            <th class="text-center ">Level 7 Name</th>

                                            <th class="text-center ">Level 7 designation name</th>
                                            <th class="text-center ">Replace</th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                    </tbody>

                                </table>


                                <div class="d-flex justify-content-between">
                                    <p id="current_page_total_items_items_per_page">
                                    </p>


                                    <nav aria-label="Page navigation example">
                                        <ul class="pagination" id="customPagination">
                                            <!-- Pagination buttons will be dynamically generated here -->
                                        </ul>
                                    </nav>


                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>






<script>
    $(document).ready(function() {

        function escapeHtml(unsafe) {
            if (typeof unsafe !== 'string') {
                return '';
            }
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        if ($.fn.DataTable.isDataTable('#exampley')) {
            $('#exampley').DataTable().clear().destroy();
        }
        var table = $('#exampley').DataTable({
            paging: false, // Disable default DataTable pagination
            searching: true,
            info: false,
            autoWidth: true,
            scrollY: "550px",
            scrollCollapse: true,
            fixedHeader: true,
            fixedFooter: true,
            dom: '<"d-flex bd-highlight" id="om"<"p-2 flex-grow-1 bd-highlight"l><"p-2 bd-highlight"f><"p-2 bd-highlight"B>>t<"bottom"ip><"clear">',
            buttons: [{
                extend: 'excelHtml5',
                text: '<i class="fa fa-download"></i> Download',
                titleAttr: 'Download as Excel',
                exportOptions: {}
            }]
        });



        $('.flex-grow-1').append(`
        <label class="ml-2">
            
            <select id="pageLengthSelect" class="form-select form-control-sm" aria-label="Select Page Length">
                <option value="10">10</option>
                <option value="20">20</option>
                <option value="30">30</option>
            </select> 
      
        </label>
    `);

        // Event listener for the custom page length dropdown
        $('#pageLengthSelect').on('change', function() {
            var selectedLength = parseInt($(this).val(), 10);
            if (!isNaN(selectedLength)) {
                table.page.len(selectedLength).draw(); // Update page length and redraw table
                fetchDataAndUpdate(getParams()); // Fetch new data based on the selected page length
            }
        });


        $('#loader').show();

        function fetchData(url, params = {}) {
            $('#loader').show();
            $.ajax({
                url: url,
                method: 'GET',
                data: params,
                dataType: 'json',
                success: function(response) {
                    updatePagination(response.pagination);


                    $('#loader').hide();
                    table.clear();
                    if (response && response.maping) {


                        let uniqueDBCodes = new Set(); // To track unique DB_Code values
                        $.each(response.maping, function(index, item) {
                            if (!uniqueDBCodes.has(item
                                    .DB_Code)) { // Check if DB_Code is unique
                                uniqueDBCodes.add(item.DB_Code); // Add DB_Code to the Set

                                table.row.add([

                                    escapeHtml(item.DB_Code || 'N/A'),


                                    escapeHtml(item.Level_1_Name || 'N/A'),
                                    escapeHtml(item.Level_1_designation_name || 'N/A'),
                                    escapeHtml(item.Level_2_Name || 'N/A'),
                                    escapeHtml(item.Level_2_designation_name || 'N/A'),
                                    escapeHtml(item.Level_3_Name || 'N/A'),
                                    escapeHtml(item.Level_3_designation_name || 'N/A'),
                                    escapeHtml(item.Level_4_Name || 'N/A'),
                                    escapeHtml(item.Level_4_designation_name || 'N/A'),
                                    escapeHtml(item.Level_5_Name || 'N/A'),
                                    escapeHtml(item.Level_5_designation_name || 'N/A'),
                                    escapeHtml(item.Level_6_Name || 'N/A'),
                                    escapeHtml(item.Level_6_designation_name || 'N/A'),
                                    escapeHtml(item.Level_7_Name || 'N/A'),
                                    escapeHtml(item.Level_7_designation_name || 'N/A'),
                                    '<div class="testone">' +
                                    '<a href="<?= site_url('admin/emp_Left') ?>?id1=' +
                                    encodeURIComponent(item.Emp_id1 || 'N/A') +
                                    // Emp_id1
                                    '&id2=' + encodeURIComponent(item.Emp_id2 ||
                                        'N/A') +
                                    // Emp_id2
                                    '&id3=' + encodeURIComponent(item.Emp_id3 ||
                                        'N/A') +
                                    // Emp_id3
                                    '&id4=' + encodeURIComponent(item.Emp_id4 ||
                                        'N/A') +
                                    // Emp_id4
                                    '&id5=' + encodeURIComponent(item.Emp_id5 ||
                                        'N/A') +
                                    // Emp_id5
                                    '&id6=' + encodeURIComponent(item.Emp_id6 ||
                                        'N/A') +
                                    // Emp_id6
                                    '&id7=' + encodeURIComponent(item.Emp_id7 ||
                                        'N/A') +
                                    // Emp_id7
                                    '&customer_name=' + encodeURIComponent(item
                                        .Customer_Name || 'N/A') +
                                    '" class="btn btn-primary text-white setfont">' +
                                    `Left` +
                                    '</a>' +


                                    '<a href="<?= site_url('admin/emp_Transfer') ?>?id1=' +
                                    encodeURIComponent(item.Emp_id1 || 'N/A') +
                                    // Emp_id1
                                    '&id2=' + encodeURIComponent(item.Emp_id2 ||
                                        'N/A') +
                                    // Emp_id2
                                    '&id3=' + encodeURIComponent(item.Emp_id3 ||
                                        'N/A') +
                                    // Emp_id3
                                    '&id4=' + encodeURIComponent(item.Emp_id4 ||
                                        'N/A') +
                                    // Emp_id4
                                    '&id5=' + encodeURIComponent(item.Emp_id5 ||
                                        'N/A') +
                                    // Emp_id5
                                    '&id6=' + encodeURIComponent(item.Emp_id6 ||
                                        'N/A') +
                                    // Emp_id6
                                    '&id7=' + encodeURIComponent(item.Emp_id7 ||
                                        'N/A') +
                                    // Emp_id7
                                    '&customer_name=' + encodeURIComponent(item
                                        .Customer_Name || 'N/A') +
                                    '" class="btn btn-primary text-white setfont">' +
                                    `Transfer` +
                                    '</a>' +


                                    '<a href="<?= site_url('admin/emp_Promoted') ?>?id1=' +
                                    encodeURIComponent(item.Emp_id1 || 'N/A') +
                                    // Emp_id1
                                    '&id2=' + encodeURIComponent(item.Emp_id2 ||
                                        'N/A') +
                                    // Emp_id2
                                    '&id3=' + encodeURIComponent(item.Emp_id3 ||
                                        'N/A') +
                                    // Emp_id3
                                    '&id4=' + encodeURIComponent(item.Emp_id4 ||
                                        'N/A') +
                                    // Emp_id4
                                    '&id5=' + encodeURIComponent(item.Emp_id5 ||
                                        'N/A') +
                                    // Emp_id5
                                    '&id6=' + encodeURIComponent(item.Emp_id6 ||
                                        'N/A') +
                                    // Emp_id6
                                    '&id7=' + encodeURIComponent(item.Emp_id7 ||
                                        'N/A') +
                                    // Emp_id7
                                    '&customer_name=' + encodeURIComponent(item
                                        .Customer_Name || 'N/A') +
                                    '" class="btn btn-primary text-white setfont">' +
                                    `Promoted` +
                                    '</a>' +
                                    '    </div>',



                                ]).draw();
                            }
                        });
                    } else {
                        table.row.add(['No data found', '', '', '', '', '', '', '', '', '', '', '',
                            '',
                            '', '', '', '', '', '', '', '', '', '', '', '', '', ''
                        ]).draw();
                    }


                    populateDropdowns(response.maping);

                    function populateDropdowns(mapingData) {
                        var salesCodeDropdown = $('#Sales_Code');
                        var distributionChannelDropdown = $('#Distribution_Channel_Code');
                        var divisionCodeDropdown = $('#Division_Code');
                        var customerTypeDropdown = $('#Customer_Type_Code');
                        var customerGroupDropdown = $('#Customer_Group_Code');
                        var populationStrataDropdown = $('#Population_Strata_2');

                        // Collect unique zones


                        // Collect unique sales codes
                        var uniqueSalesCodes = {};
                        $.each(mapingData, function(index, item) {
                            if (item.Sales_Code) {
                                uniqueSalesCodes[item.Sales_Code] = item.Sales_Name;
                            }
                        });
                        $.each(uniqueSalesCodes, function(code, name) {
                            if (!salesCodeDropdown.find('option[value="' + escapeHtml(
                                        code) +
                                    '"]').length) {
                                salesCodeDropdown.append('<option value="' + escapeHtml(
                                        code) +
                                    '">' + escapeHtml(name) + '</option>');
                            }
                        });
                        salesCodeDropdown.selectpicker('refresh');

                        // Collect unique distribution channels
                        var uniqueChannels = {};
                        $.each(mapingData, function(index, item) {
                            if (item.Distribution_Channel_Code) {
                                uniqueChannels[item.Distribution_Channel_Code] = item
                                    .Distribution_Channel_Name;
                            }
                        });
                        $.each(uniqueChannels, function(code, name) {
                            if (!distributionChannelDropdown.find('option[value="' +
                                    escapeHtml(
                                        code) + '"]').length) {
                                distributionChannelDropdown.append('<option value="' +
                                    escapeHtml(code) + '">' + escapeHtml(name) +
                                    '</option>'
                                );
                            }
                        });


                        distributionChannelDropdown.selectpicker('refresh');

                        // Collect unique division codes
                        var uniqueDivisions = {};
                        $.each(mapingData, function(index, item) {
                            if (item.Division_Code) {
                                uniqueDivisions[item.Division_Code] = item.Division_Name;
                            }
                        });
                        $.each(uniqueDivisions, function(code, name) {
                            if (!divisionCodeDropdown.find('option[value="' + escapeHtml(
                                        code) +
                                    '"]').length) {
                                divisionCodeDropdown.append('<option value="' + escapeHtml(
                                    code) + '">' + escapeHtml(name) + '</option>');
                            }
                        });
                        divisionCodeDropdown.selectpicker('refresh');

                        // Collect unique customer types
                        var uniqueCustomerTypes = {};
                        $.each(mapingData, function(index, item) {
                            if (item.Customer_Type_Code) {
                                uniqueCustomerTypes[item.Customer_Type_Code] = item
                                    .Customer_Type_Name;
                            }
                        });
                        $.each(uniqueCustomerTypes, function(code, name) {
                            if (!customerTypeDropdown.find('option[value="' + escapeHtml(
                                        code) +
                                    '"]').length) {
                                customerTypeDropdown.append('<option value="' + escapeHtml(
                                    code) + '">' + escapeHtml(name) + '</option>');
                            }
                        });
                        customerTypeDropdown.selectpicker('refresh');

                        // Collect unique customer groups
                        var uniqueCustomerGroups = {};
                        $.each(mapingData, function(index, item) {
                            if (item.Customer_Group_Code) {
                                uniqueCustomerGroups[item.Customer_Group_Code] = item
                                    .Customer_Group_Name;
                            }
                        });
                        $.each(uniqueCustomerGroups, function(code, name) {
                            if (!customerGroupDropdown.find('option[value="' + escapeHtml(
                                    code) + '"]').length) {
                                customerGroupDropdown.append('<option value="' + escapeHtml(
                                    code) + '">' + escapeHtml(name) + '</option>');
                            }
                        });
                        customerGroupDropdown.selectpicker('refresh');

                        // Collect unique population strata
                        var uniquePopulationStrata = {};
                        $.each(mapingData, function(index, item) {
                            if (item.Population_Strata_2) {
                                uniquePopulationStrata[item.Population_Strata_2] = item
                                    .Population_Strata_2;
                            }
                        });
                        $.each(uniquePopulationStrata, function(code, name) {
                            if (!populationStrataDropdown.find('option[value="' +
                                    escapeHtml(
                                        code) + '"]').length) {
                                populationStrataDropdown.append('<option value="' +
                                    escapeHtml(
                                        code) + '">' + escapeHtml(name) + '</option>');
                            }
                        });
                        populationStrataDropdown.selectpicker('refresh');
                    }


                },
                error: function() {
                    $('#loader').hide(); // Hide loader on error
                    table.row.add(['An error occurred', '', '', '', '', '', '', '', '', '', '', '', '',
                        '', '', '', '', '', '', '', '', '', '', '', '', '', ''
                    ]).draw();
                }
            });
        }


        function updatePagination(pagination) {
            var paginationContainer = $('#customPagination');
            paginationContainer.empty();

            // Correct item range for showing pagination details
            var startItem = (pagination.current_page - 1) * pagination.items_per_page + 1;
            var endItem = Math.min(pagination.current_page * pagination.items_per_page, pagination.total_items);
            $('#current_page_total_items_items_per_page').html(
                `Showing ${startItem} to ${endItem} of ${pagination.total_items} entries`
            );

            var currentPage = parseInt(pagination.current_page);
            var totalPages = parseInt(pagination.total_pages);

            // "First" and "Previous" buttons
            if (currentPage > 1) {
                paginationContainer.append(
                    '<li class="page-item"><a class="page-link" href="#" data-page="1">First</a></li>');
                paginationContainer.append('<li class="page-item"><a class="page-link" href="#" data-page="' + (
                    currentPage - 1) + '">Previous</a></li>');
            }

            // Loop through page numbers
            for (var i = 1; i <= totalPages; i++) {
                var activeClass = (i === currentPage) ? 'active' : '';
                paginationContainer.append('<li class="page-item ' + activeClass +
                    '"><a class="page-link" href="#" data-page="' + i + '">' + i + '</a></li>');
            }

            // "Next" and "Last" buttons
            if (currentPage < totalPages) {
                paginationContainer.append('<li class="page-item"><a class="page-link" href="#" data-page="' + (
                    currentPage + 1) + '">Next</a></li>');
                paginationContainer.append('<li class="page-item"><a class="page-link" href="#" data-page="' +
                    totalPages + '">Last</a></li>');
            }

            // Click event for pagination links
            $('#customPagination .page-link').on('click', function(e) {
                e.preventDefault();
                var page = $(this).data('page');
                var params = getParams();
                params.page = page;
                fetchDataAndUpdate(params);
            });
        }

        // Fetch data based on parameters
        function fetchDataAndUpdate(params) {
            console.log('Fetching data with params:', params); // Debugging the params
            fetchData('<?= site_url('admin/hierarchydata_ajex'); ?>', params);
        }

        // Fetch initial data when the page loads
        fetchDataAndUpdate(getParams());

        // Collect parameters from form fields
        function getParams() {
            return {
                Sales_Code: $('#Sales_Code').val() || null,
                Distribution_Channel_Code: $('#Distribution_Channel_Code').val() || null,
                Division_Code: $('#Division_Code').val() || null,
                Customer_Type_Code: $('#Customer_Type_Code').val() || null,
                Customer_Group_Code: $('#Customer_Group_Code').val() || null,
                Population_Strata_2: $('#Population_Strata_2').val() || null,
                page: parseInt($('#currentPage').val(), 10) || 1,
                items_per_page: parseInt($('#pageLengthSelect').val(), 10) || 10
            };
        }

        // AJAX function to fetch data from the server


        // Handle dropdown change events
        $('#Sales_Code').change(function() {
            resetDropdowns();
            fetchDataAndUpdate(getParams());
        });

        $('#Distribution_Channel_Code').change(function() {
            resetDropdowns();
            fetchDataAndUpdate(getParams());
        });

        $('#Division_Code').change(function() {
            resetDropdowns();
            fetchDataAndUpdate(getParams());
        });

        $('#Customer_Type_Code').change(function() {
            resetDropdowns();
            fetchDataAndUpdate(getParams());
        });

        $('#Customer_Group_Code').change(function() {
            resetDropdowns();
            fetchDataAndUpdate(getParams());
        });

        $('#Population_Strata_2').change(function() {
            fetchDataAndUpdate(getParams());
        });

        // Reset dropdowns when one changes
        function resetDropdowns() {
            $('#Distribution_Channel_Code').empty();
            $('#Division_Code').empty();
            $('#Customer_Type_Code').empty();
            $('#Customer_Group_Code').empty();
            $('#Population_Strata_2').empty();
        }





    });
</script>



<script>
    document.addEventListener('DOMContentLoaded', function() {
        document.body.addEventListener('click', function(event) {
            if (event.target.closest('.delete-btn')) {
                var id = event.target.closest('.delete-btn').getAttribute('data-id'); // Get the dynamic ID

                swal({
                        title: "Are you sure?",
                        text: "You won't be able to undo this action!",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: '#DD6B55',
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: "No, cancel!",
                        closeOnConfirm: false,
                        closeOnCancel: true
                    },
                    function(isConfirm) {
                        if (isConfirm) {
                            window.location.href = "<?php echo site_url('admin/hierarchydelete/'); ?>" +
                                id;
                        } else {
                            swal("Cancelled", "Your item is safe :)", "error");
                        }
                    });
            }
        });
    });
</script>